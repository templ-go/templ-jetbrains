Templ File(0,2760)
  PsiElement(TemplTokenType.GO_PACKAGE_FRAGMENT)('package testcssusage')(0,20)
  PsiElement(TemplTokenType.GO_ROOT_FRAGMENT)('\n\nimport "fmt"\n\n')(20,36)
  PsiComment(TemplTokenType.LINE_COMMENT)('// Constant class.')(36,54)
  PsiElement(TemplTokenType.GO_ROOT_FRAGMENT)('\n')(54,55)
  TemplHtmlDeclImpl(TemplElementType.HTML_DECL)(55,187)
    PsiElement(TemplTokenType.templ)('templ')(55,60)
    PsiElement(TemplTokenType.DECL_GO_TOKEN)(' StyleTagsAreSupported() ')(60,85)
    PsiElement(TemplTokenType.{)('{')(85,86)
    TemplHtmlDeclBodyImpl(TemplElementType.HTML_DECL_BODY)(86,186)
      PsiElement(TemplTokenType.HTML_FRAGMENT)('\n\t<style>\n\t.test {\n\t\tcolor: #ff0000;\n\t}\n\t</style>\n\t<div class="test">Style tags are supported</div>\n')(86,186)
    PsiElement(TemplTokenType.})('}')(186,187)
  PsiElement(TemplTokenType.GO_ROOT_FRAGMENT)('\n\n')(187,189)
  PsiComment(TemplTokenType.LINE_COMMENT)('// CSS components.')(189,207)
  PsiElement(TemplTokenType.GO_ROOT_FRAGMENT)('\n\nconst red = "#00ff00"\n\n')(207,232)
  TemplCssDeclImpl(TemplElementType.CSS_DECL)(232,276)
    PsiElement(TemplTokenType.css)('css')(232,235)
    PsiWhiteSpace(' ')(235,236)
    PsiElement(TemplTokenType.CSS_CLASS_ID)('cssComponentGreen')(236,253)
    PsiElement(TemplTokenType.()('(')(253,254)
    PsiElement(TemplTokenType.))(')')(254,255)
    PsiWhiteSpace(' ')(255,256)
    PsiElement(TemplTokenType.{)('{')(256,257)
    PsiElement(TemplTokenType.CSS_PROPERTIES)('\n\tcolor: { red };\n')(257,275)
    PsiElement(TemplTokenType.})('}')(275,276)
  PsiElement(TemplTokenType.GO_ROOT_FRAGMENT)('\n\n')(276,278)
  TemplHtmlDeclImpl(TemplElementType.HTML_DECL)(278,386)
    PsiElement(TemplTokenType.templ)('templ')(278,283)
    PsiElement(TemplTokenType.DECL_GO_TOKEN)(' CSSComponentsAreSupported() ')(283,312)
    PsiElement(TemplTokenType.{)('{')(312,313)
    TemplHtmlDeclBodyImpl(TemplElementType.HTML_DECL_BODY)(313,385)
      PsiElement(TemplTokenType.HTML_FRAGMENT)('\n\t<div class=')(313,326)
      PsiElement(TemplTokenType.TEMPL_FRAGMENT)('{ cssComponentGreen() }')(326,349)
      PsiElement(TemplTokenType.HTML_FRAGMENT)('>CSS components are supported</div>\n')(349,385)
    PsiElement(TemplTokenType.})('}')(385,386)
  PsiElement(TemplTokenType.GO_ROOT_FRAGMENT)('\n\n')(386,388)
  PsiComment(TemplTokenType.LINE_COMMENT)('// Both CSS components and constants are supported.')(388,439)
  PsiElement(TemplTokenType.GO_ROOT_FRAGMENT)('\n')(439,440)
  PsiComment(TemplTokenType.LINE_COMMENT)('// Only string names are really required. There is no need to use templ.Class or templ.SafeClass.')(440,537)
  PsiElement(TemplTokenType.GO_ROOT_FRAGMENT)('\n')(537,538)
  TemplHtmlDeclImpl(TemplElementType.HTML_DECL)(538,1043)
    PsiElement(TemplTokenType.templ)('templ')(538,543)
    PsiElement(TemplTokenType.DECL_GO_TOKEN)(' CSSComponentsAndConstantsAreSupported() ')(543,584)
    PsiElement(TemplTokenType.{)('{')(584,585)
    TemplHtmlDeclBodyImpl(TemplElementType.HTML_DECL_BODY)(585,1042)
      PsiElement(TemplTokenType.HTML_FRAGMENT)('\n\t<div class=')(585,598)
      PsiElement(TemplTokenType.TEMPL_FRAGMENT)('{ cssComponentGreen(), "classA", templ.Class("&&&classB"), templ.SafeClass("classC"), "d e" }')(598,691)
      PsiElement(TemplTokenType.HTML_FRAGMENT)(' type="button">Both CSS components and constants are supported</div>\n\t')(691,761)
      PsiComment(TemplTokenType.LINE_COMMENT)('// The following is also valid, but not required - you can put the class names in directly.')(761,852)
      PsiElement(TemplTokenType.HTML_FRAGMENT)('\n\t<div class=')(852,865)
      PsiElement(TemplTokenType.TEMPL_FRAGMENT)('{ templ.Classes(cssComponentGreen(), "classA", templ.Class("&&&classB"), templ.SafeClass("classC")), "d e" }')(865,973)
      PsiElement(TemplTokenType.HTML_FRAGMENT)(' type="button">Both CSS components and constants are supported</div>\n')(973,1042)
    PsiElement(TemplTokenType.})('}')(1042,1043)
  PsiElement(TemplTokenType.GO_ROOT_FRAGMENT)('\n\n')(1043,1045)
  PsiComment(TemplTokenType.LINE_COMMENT)('// Maps can be used to determine if a class should be added or not.')(1045,1112)
  PsiElement(TemplTokenType.GO_ROOT_FRAGMENT)('\n')(1112,1113)
  TemplHtmlDeclImpl(TemplElementType.HTML_DECL)(1113,1300)
    PsiElement(TemplTokenType.templ)('templ')(1113,1118)
    PsiElement(TemplTokenType.DECL_GO_TOKEN)(' MapsCanBeUsedToConditionallySetClasses() ')(1118,1160)
    PsiElement(TemplTokenType.{)('{')(1160,1161)
    TemplHtmlDeclBodyImpl(TemplElementType.HTML_DECL_BODY)(1161,1299)
      PsiElement(TemplTokenType.HTML_FRAGMENT)('\n\t<div class=')(1161,1174)
      PsiElement(TemplTokenType.TEMPL_FRAGMENT)('{ map[string]bool{"a": true, "b": false, "c": true} }')(1174,1227)
      PsiElement(TemplTokenType.HTML_FRAGMENT)('>Maps can be used to determine if a class should be added or not.</div>\n')(1227,1299)
    PsiElement(TemplTokenType.})('}')(1299,1300)
  PsiElement(TemplTokenType.GO_ROOT_FRAGMENT)('\n\n')(1300,1302)
  PsiComment(TemplTokenType.LINE_COMMENT)('// The templ.KV function can be used to add a class if a condition is true.')(1302,1377)
  PsiElement(TemplTokenType.GO_ROOT_FRAGMENT)('\n\n')(1377,1379)
  TemplCssDeclImpl(TemplElementType.CSS_DECL)(1379,1408)
    PsiElement(TemplTokenType.css)('css')(1379,1382)
    PsiWhiteSpace(' ')(1382,1383)
    PsiElement(TemplTokenType.CSS_CLASS_ID)('d')(1383,1384)
    PsiElement(TemplTokenType.()('(')(1384,1385)
    PsiElement(TemplTokenType.))(')')(1385,1386)
    PsiWhiteSpace(' ')(1386,1387)
    PsiElement(TemplTokenType.{)('{')(1387,1388)
    PsiElement(TemplTokenType.CSS_PROPERTIES)('\n\tfont-size: 12pt;\n')(1388,1407)
    PsiElement(TemplTokenType.})('}')(1407,1408)
  PsiElement(TemplTokenType.GO_ROOT_FRAGMENT)('\n\n')(1408,1410)
  TemplCssDeclImpl(TemplElementType.CSS_DECL)(1410,1439)
    PsiElement(TemplTokenType.css)('css')(1410,1413)
    PsiWhiteSpace(' ')(1413,1414)
    PsiElement(TemplTokenType.CSS_CLASS_ID)('e')(1414,1415)
    PsiElement(TemplTokenType.()('(')(1415,1416)
    PsiElement(TemplTokenType.))(')')(1416,1417)
    PsiWhiteSpace(' ')(1417,1418)
    PsiElement(TemplTokenType.{)('{')(1418,1419)
    PsiElement(TemplTokenType.CSS_PROPERTIES)('\n\tfont-size: 14pt;\n')(1419,1438)
    PsiElement(TemplTokenType.})('}')(1438,1439)
  PsiElement(TemplTokenType.GO_ROOT_FRAGMENT)('\n\n')(1439,1441)
  TemplHtmlDeclImpl(TemplElementType.HTML_DECL)(1441,1630)
    PsiElement(TemplTokenType.templ)('templ')(1441,1446)
    PsiElement(TemplTokenType.DECL_GO_TOKEN)(' KVCanBeUsedToConditionallySetClasses() ')(1446,1486)
    PsiElement(TemplTokenType.{)('{')(1486,1487)
    TemplHtmlDeclBodyImpl(TemplElementType.HTML_DECL_BODY)(1487,1629)
      PsiElement(TemplTokenType.HTML_FRAGMENT)('\n\t<div class=')(1487,1500)
      PsiElement(TemplTokenType.TEMPL_FRAGMENT)('{ "a", templ.KV("b", false), "c", templ.KV(d(), false), templ.KV(e(), true) }')(1500,1577)
      PsiElement(TemplTokenType.HTML_FRAGMENT)('>KV can be used to conditionally set classes.</div>\n')(1577,1629)
    PsiElement(TemplTokenType.})('}')(1629,1630)
  PsiElement(TemplTokenType.GO_ROOT_FRAGMENT)('\n\n')(1630,1632)
  PsiComment(TemplTokenType.LINE_COMMENT)('// Pseudo attributes can be used without any special syntax.')(1632,1692)
  PsiElement(TemplTokenType.GO_ROOT_FRAGMENT)('\n')(1692,1693)
  TemplHtmlDeclImpl(TemplElementType.HTML_DECL)(1693,1928)
    PsiElement(TemplTokenType.templ)('templ')(1693,1698)
    PsiElement(TemplTokenType.DECL_GO_TOKEN)(' PsuedoAttributesAndComplexClassNamesAreSupported() ')(1698,1750)
    PsiElement(TemplTokenType.{)('{')(1750,1751)
    TemplHtmlDeclBodyImpl(TemplElementType.HTML_DECL_BODY)(1751,1927)
      PsiElement(TemplTokenType.HTML_FRAGMENT)('\n\t<div class=')(1751,1764)
      PsiElement(TemplTokenType.TEMPL_FRAGMENT)('{ "bg-violet-500", "hover:bg-red-600", "hover:bg-sky-700", "text-[#50d71e]", "w-[calc(100%-4rem)" }')(1764,1863)
      PsiElement(TemplTokenType.HTML_FRAGMENT)('>Psuedo attributes and complex class names are supported.</div>\n')(1863,1927)
    PsiElement(TemplTokenType.})('}')(1927,1928)
  PsiElement(TemplTokenType.GO_ROOT_FRAGMENT)('\n\n')(1928,1930)
  PsiComment(TemplTokenType.LINE_COMMENT)('// Class names are HTML escaped.')(1930,1962)
  PsiElement(TemplTokenType.GO_ROOT_FRAGMENT)('\n')(1962,1963)
  TemplHtmlDeclImpl(TemplElementType.HTML_DECL)(1963,2084)
    PsiElement(TemplTokenType.templ)('templ')(1963,1968)
    PsiElement(TemplTokenType.DECL_GO_TOKEN)(' ClassNamesAreHTMLEscaped() ')(1968,1996)
    PsiElement(TemplTokenType.{)('{')(1996,1997)
    TemplHtmlDeclBodyImpl(TemplElementType.HTML_DECL_BODY)(1997,2083)
      PsiElement(TemplTokenType.HTML_FRAGMENT)('\n\t<div class=')(1997,2010)
      PsiElement(TemplTokenType.TEMPL_FRAGMENT)('{ "a\" onClick=\"alert('hello')\"" }')(2010,2046)
      PsiElement(TemplTokenType.HTML_FRAGMENT)('>Class names are HTML escaped.</div>\n')(2046,2083)
    PsiElement(TemplTokenType.})('}')(2083,2084)
  PsiElement(TemplTokenType.GO_ROOT_FRAGMENT)('\n\n')(2084,2086)
  PsiComment(TemplTokenType.LINE_COMMENT)('// CSS components can be used with arguments.')(2086,2131)
  PsiElement(TemplTokenType.GO_ROOT_FRAGMENT)('\n\n')(2131,2133)
  TemplCssDeclImpl(TemplElementType.CSS_DECL)(2133,2203)
    PsiElement(TemplTokenType.css)('css')(2133,2136)
    PsiWhiteSpace(' ')(2136,2137)
    PsiElement(TemplTokenType.CSS_CLASS_ID)('loading')(2137,2144)
    PsiElement(TemplTokenType.()('(')(2144,2145)
    PsiElement(TemplTokenType.GO_CSS_DECL_PARAMS)('percent int')(2145,2156)
    PsiElement(TemplTokenType.))(')')(2156,2157)
    PsiWhiteSpace(' ')(2157,2158)
    PsiElement(TemplTokenType.{)('{')(2158,2159)
    PsiElement(TemplTokenType.CSS_PROPERTIES)('\n\twidth: { fmt.Sprintf("%d%%", percent) };\n')(2159,2202)
    PsiElement(TemplTokenType.})('}')(2202,2203)
  PsiElement(TemplTokenType.GO_ROOT_FRAGMENT)('\n\n')(2203,2205)
  TemplHtmlDeclImpl(TemplElementType.HTML_DECL)(2205,2407)
    PsiElement(TemplTokenType.templ)('templ')(2205,2210)
    PsiElement(TemplTokenType.DECL_GO_TOKEN)(' CSSComponentsCanBeUsedWithArguments() ')(2210,2249)
    PsiElement(TemplTokenType.{)('{')(2249,2250)
    TemplHtmlDeclBodyImpl(TemplElementType.HTML_DECL_BODY)(2250,2406)
      PsiElement(TemplTokenType.HTML_FRAGMENT)('\n\t<div class=')(2250,2263)
      PsiElement(TemplTokenType.TEMPL_FRAGMENT)('{ loading(50) }')(2263,2278)
      PsiElement(TemplTokenType.HTML_FRAGMENT)('>CSS components can be used with arguments.</div>\n\t<div class=')(2278,2340)
      PsiElement(TemplTokenType.TEMPL_FRAGMENT)('{ loading(100) }')(2340,2356)
      PsiElement(TemplTokenType.HTML_FRAGMENT)('>CSS components can be used with arguments.</div>\n')(2356,2406)
    PsiElement(TemplTokenType.})('}')(2406,2407)
  PsiElement(TemplTokenType.GO_ROOT_FRAGMENT)('\n\n')(2407,2409)
  PsiComment(TemplTokenType.LINE_COMMENT)('// Combine all tests.')(2409,2430)
  PsiElement(TemplTokenType.GO_ROOT_FRAGMENT)('\n')(2430,2431)
  TemplHtmlDeclImpl(TemplElementType.HTML_DECL)(2431,2760)
    PsiElement(TemplTokenType.templ)('templ')(2431,2436)
    PsiElement(TemplTokenType.DECL_GO_TOKEN)(' TestComponent() ')(2436,2453)
    PsiElement(TemplTokenType.{)('{')(2453,2454)
    TemplHtmlDeclBodyImpl(TemplElementType.HTML_DECL_BODY)(2454,2759)
      PsiElement(TemplTokenType.HTML_FRAGMENT)('\n')(2454,2455)
      PsiWhiteSpace('\t')(2455,2456)
      TemplComponentImpl(TemplElementType.COMPONENT)(2456,2480)
        PsiElement(TemplTokenType.@)('@')(2456,2457)
        PsiElement(TemplTokenType.COMPONENT_REFERENCE)('StyleTagsAreSupported()')(2457,2480)
      PsiElement(TemplTokenType.HTML_FRAGMENT)('\n')(2480,2481)
      PsiWhiteSpace('\t')(2481,2482)
      TemplComponentImpl(TemplElementType.COMPONENT)(2482,2510)
        PsiElement(TemplTokenType.@)('@')(2482,2483)
        PsiElement(TemplTokenType.COMPONENT_REFERENCE)('CSSComponentsAreSupported()')(2483,2510)
      PsiElement(TemplTokenType.HTML_FRAGMENT)('\n')(2510,2511)
      PsiWhiteSpace('\t')(2511,2512)
      TemplComponentImpl(TemplElementType.COMPONENT)(2512,2552)
        PsiElement(TemplTokenType.@)('@')(2512,2513)
        PsiElement(TemplTokenType.COMPONENT_REFERENCE)('CSSComponentsAndConstantsAreSupported()')(2513,2552)
      PsiElement(TemplTokenType.HTML_FRAGMENT)('\n')(2552,2553)
      PsiWhiteSpace('\t')(2553,2554)
      TemplComponentImpl(TemplElementType.COMPONENT)(2554,2595)
        PsiElement(TemplTokenType.@)('@')(2554,2555)
        PsiElement(TemplTokenType.COMPONENT_REFERENCE)('MapsCanBeUsedToConditionallySetClasses()')(2555,2595)
      PsiElement(TemplTokenType.HTML_FRAGMENT)('\n')(2595,2596)
      PsiWhiteSpace('\t')(2596,2597)
      TemplComponentImpl(TemplElementType.COMPONENT)(2597,2636)
        PsiElement(TemplTokenType.@)('@')(2597,2598)
        PsiElement(TemplTokenType.COMPONENT_REFERENCE)('KVCanBeUsedToConditionallySetClasses()')(2598,2636)
      PsiElement(TemplTokenType.HTML_FRAGMENT)('\n')(2636,2637)
      PsiWhiteSpace('\t')(2637,2638)
      TemplComponentImpl(TemplElementType.COMPONENT)(2638,2689)
        PsiElement(TemplTokenType.@)('@')(2638,2639)
        PsiElement(TemplTokenType.COMPONENT_REFERENCE)('PsuedoAttributesAndComplexClassNamesAreSupported()')(2639,2689)
      PsiElement(TemplTokenType.HTML_FRAGMENT)('\n')(2689,2690)
      PsiWhiteSpace('\t')(2690,2691)
      TemplComponentImpl(TemplElementType.COMPONENT)(2691,2718)
        PsiElement(TemplTokenType.@)('@')(2691,2692)
        PsiElement(TemplTokenType.COMPONENT_REFERENCE)('ClassNamesAreHTMLEscaped()')(2692,2718)
      PsiElement(TemplTokenType.HTML_FRAGMENT)('\n')(2718,2719)
      PsiWhiteSpace('\t')(2719,2720)
      TemplComponentImpl(TemplElementType.COMPONENT)(2720,2758)
        PsiElement(TemplTokenType.@)('@')(2720,2721)
        PsiElement(TemplTokenType.COMPONENT_REFERENCE)('CSSComponentsCanBeUsedWithArguments()')(2721,2758)
      PsiElement(TemplTokenType.HTML_FRAGMENT)('\n')(2758,2759)
    PsiElement(TemplTokenType.})('}')(2759,2760)