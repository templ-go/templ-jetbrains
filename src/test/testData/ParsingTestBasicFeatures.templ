package untitled1

templ Hello(name string) {
  <div>Hello, { name }</div>
}

type Person struct {
    Name string
}

templ Greeting(
  person Person,
  ) {
  <div class="greeting">
    @Hello(person.Name)
  </div>
}

type Data struct {
	message string
}

templ (d Data) Method() {
	<div>{ d.message }</div>
}

templ Message() {
    <div>
        @Data{
            message: "You can implement methods on a type.",
        }.Method()
    </div>
}

script withComment() {
	//'
}

type data struct{}

func (d data) IsTrue() bool {
    return true
}

templ conditionals(d data) {
	<div>
		if d.IsTrue() {
            <div>True</div>
		} else if !d.IsTrue() {
			{ "False" }
		} else {
			{ "Else" }
		}
	</div>
	<div>
		if 1 == 2 {
			{ "If" }
		} else if 1 == 1 {
			{ "ElseIf" }
		}
	</div>
	<div>
		if 1 == 2 {
			{ "If" }
		} else if 1 == 3 {
		    <div>
                 { "ElseIf" }
		    </div>
		} else if 1 == 4 {
		} else if 1 == 1 {
			{ "OK" }
		}
	</div>
}

templ loops(items []string) {
	for _, item := range items {
		<div>{ item }</div>
	}
}

templ render(input string) {
	switch input {
		case "a":
			{ "it was 'a'" }
		case "b":
		    <div>It was 'b'</div>
		default:
			{ "it was something else" }
	}
}

templ attributeEscaping(url string) {
	<div>
		<a href={ templ.URL(url) }>text</a>
	</div>
	<div>
		<button
			hx-post="/click"
			hx-trigger="click"
			hx-vals='{"val":"Value"}'
		>Click</button>
	</div>
}
